* Counter third
based on file:counter-second.lisp::1
lisp equivalent file:counter-third.lisp::1

** declaim
#+begin_src lisp
(declaim (optimize (speed 0) (safety 3) (debug 3)))
#+end_src

** enqueue gtk4 drawing which calls back to draw-func
file:~/Programming/Lisp/clops-gui/src/gui-drawing.lisp::12

** minimal functions
[[file:counter-third.lisp::(defmethod draw-window]]

[[file:counter-third.lisp::(defmethod process-event]]

** gaboreaning

*** keywords
re-sizeable counter scaled-buttons resize increase decrease mouse-over
mouse-pressed

*** 10 minutes break

*** musing
rubber duck and domain specific language with possible bit of mind mapping

**** hmm
We need scaled counter the screen is divided into 2 sections, upper 2/3 is for
counter and bottom 1/3 is for echo area.

The counter sub section is divided horizontally into 3 sections, plus-button,
count and minus-button.

depending on the window size, the counter sub section elements will scale in a
reactive way, hiding the buttons when the width goes below the small limit,
limiting buttons to 10% at middle limit, and haveing 30% buttons at large limit.
